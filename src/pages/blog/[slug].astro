---
export const prerender = false;

import PageLayout from '../../layouts/PageLayout.astro';
import { getEntryBySlug } from '../api/blog-entries';
import { marked } from 'marked';

const { slug } = Astro.params;

const entry = await getEntryBySlug(slug);
console.log('Blog entry:', entry);
console.log(entry.content.length, 'characters of content found for entry:', entry.title);
const content = await marked(entry.content);

// Format date for display
const formattedDate = new Date(entry.date).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

// Create canonical URL
const canonicalUrl = `https://katriga.art/blog/${entry.slug}`;
---

<PageLayout title={entry.title} description={entry.description}>
  <Fragment slot="head">
    <title>{entry.title} - Katriga Arts Blog</title>
    <meta name="title" content={`${entry.title} - Katriga Arts Blog`} />
    <meta name="description" content={entry.description} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="article" />
    <meta property="og:url" content={canonicalUrl} />
    <meta property="og:title" content={`${entry.title} - Katriga Arts Blog`} />
    <meta property="og:description" content={entry.description} />
    <meta property="og:image" content={entry.thumbnail} />
    <meta property="og:site_name" content="Katriga Arts" />
    
    <!-- Article specific meta -->
    <meta property="article:published_time" content={new Date(entry.date).toISOString()} />
    <meta property="article:author" content="Katriga" />
    {entry.categories && entry.categories.map(category => (
      <meta property="article:tag" content={category} />
    ))}

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalUrl} />
    <meta property="twitter:title" content={`${entry.title} - Katriga Arts Blog`} />
    <meta property="twitter:description" content={entry.description} />
    <meta property="twitter:image" content={entry.thumbnail} />
    <meta property="twitter:creator" content="@katriga" />

    <!-- Additional SEO meta -->
    <meta name="author" content="Katriga" />
    <meta name="robots" content="index, follow" />
    <link rel="canonical" href={canonicalUrl} />

    <!-- JSON-LD Structured Data -->
    <script type="application/ld+json">
      {JSON.stringify({
        "@context": "https://schema.org",
        "@type": "BlogPosting",
        "headline": entry.title,
        "description": entry.description,
        "image": entry.image,
        "author": {
          "@type": "Person",
          "name": "Katriga",
          "url": "https://katriga.art"
        },
        "publisher": {
          "@type": "Organization",
          "name": "Katriga Arts",
          "logo": {
            "@type": "ImageObject",
            "url": "https://katriga.art/img/logo.png"
          }
        },
        "datePublished": new Date(entry.date).toISOString(),
        "dateModified": new Date(entry.date).toISOString(),
        "mainEntityOfPage": {
          "@type": "WebPage",
          "@id": canonicalUrl
        },
        "url": canonicalUrl
      })}
    </script>
  </Fragment>

  <article class="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Blog Header -->
    <header class="mb-12">
      <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold text-white animate-reveal mb-4">
        <span class="bg-clip-text text-transparent bg-gradient-to-r from-white to-white">
          {entry.title}
        </span>
      </h1>
      <div class="flex items-center text-neutral-400 text-sm">
        <i class="fas fa-calendar-alt mr-2"></i>
        <time datetime={new Date(entry.date).toISOString()}>{formattedDate}</time>
      </div>
    </header>

    <!-- Featured Image -->
    {entry.image && (
      <figure class="mb-12 rounded-xl overflow-hidden">
        <img
          src={entry.image}
          alt={entry.imageAlt}
          class="w-full h-auto max-h-[32rem] object-cover"
          loading="lazy"
          width={1200}
          height={630}
        />
        {entry.imageCaption && (
          <figcaption class="text-center text-neutral-400 text-sm mt-2">
            {entry.imageCaption}
          </figcaption>
        )}
      </figure>
    )}

    <!-- Blog Content -->
    <section class="post-content max-w-3xl px-4 mx-auto">
      <Fragment set:html={content} />
    </section>

    <!-- Author Bio 
    <footer class="mt-16 pt-8 border-t border-neutral-700 mb-12">
      <AuthorBio author={author} />
    </footer> -->

  </article>
</PageLayout>