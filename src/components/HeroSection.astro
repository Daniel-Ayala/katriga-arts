---
interface HeroImage {
  src: string;
  alt: string;
  gallery: string;
}
interface TitlePart {
  text: string;
  highlight: boolean;
}
interface HeroButton {
  text: string;
  action: string;
  variant: 'primary' | 'secondary';
  icon?: string;
}
interface FeaturedIn {
  label: string;
  outlets: string[];
}
interface HeroData {
  image: HeroImage;
  title: {
    parts: TitlePart[];
  };
  description: string;
  buttons: HeroButton[];
  featuredIn: FeaturedIn;
}

// Data section
const heroData: HeroData = {
  image: {
    src: '/img/angel-background.webp',
    alt: 'Hero Background',
    gallery: 'hero'
  },
  title: {
    parts: [
      { text: 'Katriga', highlight: false },
      { text: 'Arts', highlight: true }
    ]
  },
  description: 'Some sentence here',
  buttons: [
    { 
      text: 'My Gallery',
      icon: 'fas fa-arrow-right',
      action: 'goToSlide(1)',
      variant: 'primary'
    },
    {
      text: 'Contact Me',
      action: 'goToSlide(5)',
      variant: 'secondary'
    }
  ],
  featuredIn: {
    label: 'As featured in:',
    outlets: ['National Geographic', 'PhotoPro', 'ArtMagz']
  }
};
---

<div id="frame">
  <div id="corner_top-left" class="corner"></div>
  <div id="corner_top-right" class="corner"></div>
  <div id="corner_bottom-left" class="corner"></div>
  <div id="corner_bottom-right" class="corner"></div>
</div>

<div class="section min-h-screen flex items-center relative overflow-hidden py-24">
  <!--<a
    href={heroData.image.src}
    class="glightbox absolute inset-0"
    data-gallery={heroData.image.gallery}
> -->
    <div
      class="absolute inset-0 hero-image bg-cover bg-center transition-transform duration-700"
      style={`background-image: url('${heroData.image.src}');`}
    ></div>
  <!--</a> -->
  <div id="hero-gradient"
    class="absolute inset-0 bg-gradient-to-r from-black via-black/20 to-transparent"
  ></div>
  <div class="container mx-auto px-6 md:px-12 z-10 relative">
    <div class="w-full md:w-4/5 lg:w-1/2">
      <div class="w-24 h-1 bg-white mb-6 rounded-full"></div>
      <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold text-white leading-tight mb-4">
        {heroData.title.parts.map((part) => (
          <span class={`block ${part.highlight ? 'text-highlight' : ''}`}>
            {part.text}
          </span>
        ))}
      </h1>
      <p class="text-lg text-neutral-200 mb-8 max-w-lg">
        {heroData.description}
      </p>
      <div class="flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4">
        <button
          @click="goToSlide(1)"
          class="bg-white hover:bg-white text-black flex items-center justify-center gap-2 px-6 py-3 rounded-md text-lg font-medium transition-all"
        >
          Gallery <i class="fas fa-arrow-right"></i>
        </button>
        <button
          @click="goToSlide(5)"
          class="relative bg-transparent border-2 border-white text-white px-8 py-3 rounded-md text-lg font-medium hover:bg-white hover:text-black transition-all duration-300 overflow-hidden group"
        >
          <span class="relative z-10">Contact Me</span>
          <span
            class="absolute inset-0 bg-white scale-x-0 group-hover:scale-x-100 transition-transform duration-300 origin-center"
          ></span>
        </button>
      </div>
      <!--<div class="mt-12 flex flex-col sm:flex-row items-center gap-3">
        <div class="text-sm text-neutral-400">{heroData.featuredIn.label}</div>
        <div class="flex space-x-4 items-center text-neutral-300">
          {heroData.featuredIn.outlets.map((outlet) => (
            <span class="text-sm font-medium">{outlet}</span>
          ))}
        </div>
      </div> -->
    </div>
  </div>
</div>